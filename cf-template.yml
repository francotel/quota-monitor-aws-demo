{
  "Description": "(SO0005-NoOU) - quota-monitor-for-aws - Hub Template, use it when you are not using AWS Organizations. Version v6.2.6",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Notification Configuration"
          },
          "Parameters": [
            "SNSEmail",
            "SlackNotification"
          ]
        }
      ],
      "ParameterLabels": {
        "SNSEmail": {
          "default": "Email address for notifications"
        },
        "SlackNotification": {
          "default": "Do you want slack notifications?"
        }
      }
    }
  },
  "Parameters": {
    "SNSEmail": {
      "Type": "String",
      "Default": "franco.navarrotel@gmail.com",
      "Description": "To disable email notifications, leave this blank."
    },
    "SlackNotification": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ]
    }
  },
  "Mappings": {
    "QuotaMonitorMap": {
      "Metrics": {
        "SendAnonymizedData": "No",
        "MetricsEndpoint": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "SSMParameters": {
        "SlackHook": "/QuotaMonitor/SlackHook",
        "Accounts": "/QuotaMonitor/Accounts",
        "NotificationMutingConfig": "/QuotaMonitor/NotificationConfiguration"
      }
    }
  },
  "Conditions": {
    "EmailTrueCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SNSEmail"
            },
            ""
          ]
        }
      ]
    },
    "SlackTrueCondition": {
      "Fn::Equals": [
        {
          "Ref": "SlackNotification"
        },
        "Yes"
      ]
    },
    # "CDKMetadataAvailable": {
    #   "Fn::Or": [
    #     {
    #       "Fn::Or": [
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "af-south-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "ap-east-1"
    #           ]
    #         }
    #       ]
    #     },
    #     {
    #       "Fn::Or": [
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-central-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-north-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-south-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-west-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-west-2"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "eu-west-3"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "il-central-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "me-central-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "me-south-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "sa-east-1"
    #           ]
    #         }
    #       ]
    #     },
    #     {
    #       "Fn::Or": [
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "us-east-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "us-east-2"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "us-west-1"
    #           ]
    #         },
    #         {
    #           "Fn::Equals": [
    #             {
    #               "Ref": "AWS::Region"
    #             },
    #             "us-west-2"
    #           ]
    #         }
    #       ]
    #     }
    #   ]
    # }
  },
  "Resources": {
    "QMBusFF5C6C0C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "QuotaMonitorBus"
      }
    },
    "KMSHubQMEncryptionKeyA80F8C05": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "CMK for AWS resources provisioned by Quota Monitor in this account",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "KMSHubQMEncryptionKeyAlias6C248240": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/CMK-KMS-Hub",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      }
    },
    "QMSlackHook4F1AD495": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "Slack Hook URL to send Quota Monitor events",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "SlackHook"
          ]
        },
        "Type": "String",
        "Value": "NOP"
      },
      "Condition": "SlackTrueCondition"
    },
    "QMAccounts3D743F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "List of target Accounts",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "Accounts"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMNotificationMutingConfig3B7948BA": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "Muting configuration for services, limits e.g. ec2:L-1216C47A,ec2:Running On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances,dynamodb,logs:*,geo:L-05EFD12D",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "NotificationMutingConfig"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMUtilsLayerQMUtilsLayerLayer80D5D993": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.2.6/asset5d480eb7c2c2531638e536a9194e31181a2c3588c125a6bcb5354eaa1985241c.zip"
        },
        "LayerName": "QM-UtilsLayer"
      }
    },

    "QMSlackNotifierQMSlackNotifierEventsRuleC3528E53": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SlackNotifier-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSlackNotifierQMSlackNotifierLambda95713661",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    
    "QMSlackNotifierQMSlackNotifierEventsRuleAllowEventRulequotamonitorhubnoouQMSlackNotifierQMSlackNotifierLambda52C322580E2041A7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierLambda95713661",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierEventsRuleC3528E53",
            "Arn"
          ]
        }
      },
      "Condition": "SlackTrueCondition"
    },

    "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName" : "sqs-dlq-lambda-notifier-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "SlackTrueCondition"
    },

    "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueuePolicy719E4C6A": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },

    "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : iam-role-lambda-notifier,
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":parameter",
                      {
                        "Ref": "QMSlackHook4F1AD495"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":parameter",
                      {
                        "Ref": "QMNotificationMutingConfig3B7948BA"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B",
        "Roles": [
          {
            "Ref": "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },

    "QMSlackNotifierQMSlackNotifierLambda95713661": {
  # checkov:skip=CKV_AWS_115: ADD REASON
  # checkov:skip=CKV_AWS_117: ADD REASON
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName" : "lambda-notifier-cf",
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.2.6/asset67377473f60463c7d96405e09c60149f1ccfec5fb5130689ffb3c7b488d38515.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SlackNotifier-Lambda",
        "Environment": {
          "Variables": {
            "SLACK_HOOK": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "SSMParameters",
                "SlackHook"
              ]
            },
            "QM_NOTIFICATION_MUTING_CONFIG_PARAMETER": {
              "Ref": "QMNotificationMutingConfig3B7948BA"
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.2.6",
            "VERSION": "v6.2.6",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60
      },
      "DependsOn": [
        "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B",
        "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D"
      ],
      "Condition": "SlackTrueCondition"
    },

    "QMSlackNotifierQMSlackNotifierLambdaEventInvokeConfig5340A982": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMSlackNotifierQMSlackNotifierLambda95713661"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      },
      "Condition": "SlackTrueCondition"
    },

    "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName" : "sns-publish-topic-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      }
    },

    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
  
    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRuleAllowEventRulequotamonitorhubnoouQMSNSPublisherFunctionQMSNSPublisherFunctionLambda76203A7F3F46BC24": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD",
            "Arn"
          ]
        }
      }
    },
  
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A": {
      "Type": "AWS::SQS::Queue", 
      "Properties": {
        "QueueName" : "sqs-dlq-lambda-publisher-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
    },

    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueuePolicyBA6A8707": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A"
          }
        ]
      }
    },
  
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : iam-role-lambda-publisher-cf,
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },

    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "SNS:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
              }
            },
            {
              "Action": "kms:GenerateDataKey",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMNotificationMutingConfig3B7948BA"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "Roles": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
          }
        ]
      }
    },

    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1": {
    # checkov:skip=CKV_AWS_115: ADD REASON
    # checkov:skip=CKV_AWS_117: ADD REASON
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName" : "lambda-publisher-cf",
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.2.6/asset2b3d38d52c3c405d4b6cd2233c3720068386a2bfdc3cd9c54df0ff7d31df5648.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-Lambda",
        "Environment": {
          "Variables": {
            "QM_NOTIFICATION_MUTING_CONFIG_PARAMETER": {
              "Ref": "QMNotificationMutingConfig3B7948BA"
            },
            "TOPIC_ARN": {
              "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.2.6",
            "VERSION": "v6.2.6",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60
      },
      "DependsOn": [
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
      ],
    },

    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaEventInvokeConfig7A963AA0": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      },
    },

    "QMEmailSubscription32E71F90": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Ref": "SNSEmail"
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
        }
      },
      "Condition": "EmailTrueCondition"
    },

  #   "QMSummarizerEventQueueQMSummarizerEventQueueEventsRuleE50B8D7C": {
  #     "Type": "AWS::Events::Rule",
  #     "Properties": {
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Summarizer-EventQueue-EventsRule",
  #       "EventBusName": {
  #         "Ref": "QMBusFF5C6C0C"
  #       },
  #       "EventPattern": {
  #         "detail": {
  #           "status": [
  #             "OK",
  #             "WARN",
  #             "ERROR"
  #           ]
  #         },
  #         "detail-type": [
  #           "Trusted Advisor Check Item Refresh Notification",
  #           "Service Quotas Utilization Notification"
  #         ],
  #         "source": [
  #           "aws.trustedadvisor",
  #           "aws-solutions.quota-monitor"
  #         ]
  #       },
  #       "State": "ENABLED",
  #       "Targets": [
  #         {
  #           "Arn": {
  #             "Fn::GetAtt": [
  #               "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
  #               "Arn"
  #             ]
  #           },
  #           "Id": "Target0"
  #         }
  #       ]
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Summarizer-EventQueue/QM-Summarizer-EventQueue-EventsRule/Resource"
  #     }
  #   },

    "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName" : "sqs-summarizer-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "VisibilityTimeout": 60
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },

    "QMSummarizerEventQueueQMSummarizerEventQueueQueuePolicyE7E1F6D8": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
          }
        ]
      }
    },

    "QMTable336670B0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName" : "table-dynamodb-cf",
        "AttributeDefinitions": [
          {
            "AttributeName": "MessageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "TimeStamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "MessageId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "TimeStamp",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "KMSHubQMEncryptionKeyA80F8C05",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ExpiryTime",
          "Enabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
    },

  #   "QMReporterQMReporterEventsRule0BF77282": {
  #     "Type": "AWS::Events::Rule",
  #     "Properties": {
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-EventsRule",
  #       "ScheduleExpression": "rate(5 minutes)",
  #       "State": "ENABLED",
  #       "Targets": [
  #         {
  #           "Arn": {
  #             "Fn::GetAtt": [
  #               "QMReporterQMReporterLambda7D98A6E4",
  #               "Arn"
  #             ]
  #           },
  #           "Id": "Target0"
  #         }
  #       ]
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-EventsRule/Resource"
  #     }
  #   },

  #   "QMReporterQMReporterEventsRuleAllowEventRulequotamonitorhubnoouQMReporterQMReporterLambda0CE086E3DDFD1F2A": {
  #     "Type": "AWS::Lambda::Permission",
  #     "Properties": {
  #       "Action": "lambda:InvokeFunction",
  #       "FunctionName": {
  #         "Fn::GetAtt": [
  #           "QMReporterQMReporterLambda7D98A6E4",
  #           "Arn"
  #         ]
  #       },
  #       "Principal": "events.amazonaws.com",
  #       "SourceArn": {
  #         "Fn::GetAtt": [
  #           "QMReporterQMReporterEventsRule0BF77282",
  #           "Arn"
  #         ]
  #       }
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-EventsRule/AllowEventRulequotamonitorhubnoouQMReporterQMReporterLambda0CE086E3"
  #     }
  #   },

    "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName" : "sqs-dlq-lambda-reporter-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
    },

    "QMReporterQMReporterLambdaDeadLetterQueuePolicyE714847D": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC"
          }
        ]
      }
    },

    "QMReporterQMReporterLambdaServiceRoleBA4CED84": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : iam-role-lambda-reporter-cf,
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },

    "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMTable336670B0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "Roles": [
          {
            "Ref": "QMReporterQMReporterLambdaServiceRoleBA4CED84"
          }
        ]
      }
    },

  #   "QMReporterQMReporterLambda7D98A6E4": {
  #     "Type": "AWS::Lambda::Function",
  #     "Properties": {
  #       "Code": {
  #         "S3Bucket": {
  #           "Fn::Sub": "solutions-${AWS::Region}"
  #         },
  #         "S3Key": "quota-monitor-for-aws/v6.2.6/assetb0eda0f156f67f1a9cb3c45ebc372ccba5a93fcecaefe26ea7ae9bab00c3e710.zip"
  #       },
  #       "DeadLetterConfig": {
  #         "TargetArn": {
  #           "Fn::GetAtt": [
  #             "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
  #             "Arn"
  #           ]
  #         }
  #       },
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-Lambda",
  #       "Environment": {
  #         "Variables": {
  #           "QUOTA_TABLE": {
  #             "Ref": "QMTable336670B0"
  #           },
  #           "SQS_URL": {
  #             "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
  #           },
  #           "MAX_MESSAGES": "10",
  #           "MAX_LOOPS": "10",
  #           "LOG_LEVEL": "info",
  #           "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.2.6",
  #           "VERSION": "v6.2.6",
  #           "SOLUTION_ID": "SO0005"
  #         }
  #       },
  #       "Handler": "index.handler",
  #       "KmsKeyArn": {
  #         "Fn::GetAtt": [
  #           "KMSHubQMEncryptionKeyA80F8C05",
  #           "Arn"
  #         ]
  #       },
  #       "Layers": [
  #         {
  #           "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
  #         }
  #       ],
  #       "MemorySize": 512,
  #       "Role": {
  #         "Fn::GetAtt": [
  #           "QMReporterQMReporterLambdaServiceRoleBA4CED84",
  #           "Arn"
  #         ]
  #       },
  #       "Runtime": "nodejs18.x",
  #       "Timeout": 10
  #     },
  #     "DependsOn": [
  #       "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
  #       "QMReporterQMReporterLambdaServiceRoleBA4CED84"
  #     ],
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/Resource",
  #       "aws:asset:path": "asset.b0eda0f156f67f1a9cb3c45ebc372ccba5a93fcecaefe26ea7ae9bab00c3e710.zip",
  #       "aws:asset:is-bundled": false,
  #       "aws:asset:property": "Code",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },
  #   "QMReporterQMReporterLambdaEventInvokeConfig07548BFA": {
  #     "Type": "AWS::Lambda::EventInvokeConfig",
  #     "Properties": {
  #       "FunctionName": {
  #         "Ref": "QMReporterQMReporterLambda7D98A6E4"
  #       },
  #       "MaximumEventAgeInSeconds": 14400,
  #       "Qualifier": "$LATEST"
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/EventInvokeConfig/Resource",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },
  #   "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9": {
  #     "Type": "AWS::Events::Rule",
  #     "Properties": {
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-EventsRule",
  #       "EventPattern": {
  #         "detail-type": [
  #           "Parameter Store Change"
  #         ],
  #         "source": [
  #           "aws.ssm"
  #         ],
  #         "resources": [
  #           {
  #             "Fn::Join": [
  #               "",
  #               [
  #                 "arn:",
  #                 {
  #                   "Ref": "AWS::Partition"
  #                 },
  #                 ":ssm:",
  #                 {
  #                   "Ref": "AWS::Region"
  #                 },
  #                 ":",
  #                 {
  #                   "Ref": "AWS::AccountId"
  #                 },
  #                 ":parameter",
  #                 {
  #                   "Ref": "QMAccounts3D743F6B"
  #                 }
  #               ]
  #             ]
  #           }
  #         ]
  #       },
  #       "State": "ENABLED",
  #       "Targets": [
  #         {
  #           "Arn": {
  #             "Fn::GetAtt": [
  #               "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
  #               "Arn"
  #             ]
  #           },
  #           "Id": "Target0"
  #         }
  #       ]
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-EventsRule/Resource"
  #     }
  #   },

  #   "QMDeploymentManagerQMDeploymentManagerEventsRuleAllowEventRulequotamonitorhubnoouQMDeploymentManagerQMDeploymentManagerLambda69BB20E9F676A8A9": {
  #     "Type": "AWS::Lambda::Permission",
  #     "Properties": {
  #       "Action": "lambda:InvokeFunction",
  #       "FunctionName": {
  #         "Fn::GetAtt": [
  #           "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
  #           "Arn"
  #         ]
  #       },
  #       "Principal": "events.amazonaws.com",
  #       "SourceArn": {
  #         "Fn::GetAtt": [
  #           "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9",
  #           "Arn"
  #         ]
  #       }
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-EventsRule/AllowEventRulequotamonitorhubnoouQMDeploymentManagerQMDeploymentManagerLambda69BB20E9"
  #     }
  #   },

    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName" : "sqs-dlq-lambda-manager-cf",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },

    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueuePolicy6B59E185": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2"
          }
        ]
      }
    },

    # "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72": {
    #   "Type": "AWS::IAM::Role",
    #   "Properties": {
    #     "RoleName" : iam-role-lambda-manager-cf,
    #     "AssumeRolePolicyDocument": {
    #       "Statement": [
    #         {
    #           "Action": "sts:AssumeRole",
    #           "Effect": "Allow",
    #           "Principal": {
    #             "Service": "lambda.amazonaws.com"
    #           }
    #         }
    #       ],
    #       "Version": "2012-10-17"
    #     },
    #     "ManagedPolicyArns": [
    #       {
    #         "Fn::Join": [
    #           "",
    #           [
    #             "arn:",
    #             {
    #               "Ref": "AWS::Partition"
    #             },
    #             ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    #           ]
    #         ]
    #       }
    #     ]
    #   }
    # },

    # "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777": {
    #   "Type": "AWS::IAM::Policy",
    #   "Properties": {
    #     "PolicyDocument": {
    #       "Statement": [
    #         {
    #           "Action": "sqs:SendMessage",
    #           "Effect": "Allow",
    #           "Resource": {
    #             "Fn::GetAtt": [
    #               "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
    #               "Arn"
    #             ]
    #           }
    #         },
    #         {
    #           "Action": [
    #             "kms:Encrypt",
    #             "kms:Decrypt",
    #             "kms:CreateGrant"
    #           ],
    #           "Effect": "Allow",
    #           "Resource": {
    #             "Fn::GetAtt": [
    #               "KMSHubQMEncryptionKeyA80F8C05",
    #               "Arn"
    #             ]
    #           }
    #         },
    #         {
    #           "Action": "kms:ListAliases",
    #           "Effect": "Allow",
    #           "Resource": "*"
    #         },
    #         {
    #           "Action": [
    #             "events:PutPermission",
    #             "events:RemovePermission"
    #           ],
    #           "Effect": "Allow",
    #           "Resource": "*"
    #         },
    #         {
    #           "Action": "events:DescribeEventBus",
    #           "Effect": "Allow",
    #           "Resource": {
    #             "Fn::GetAtt": [
    #               "QMBusFF5C6C0C",
    #               "Arn"
    #             ]
    #           }
    #         },
    #         {
    #           "Action": "ssm:GetParameter",
    #           "Effect": "Allow",
    #           "Resource": {
    #             "Fn::Join": [
    #               "",
    #               [
    #                 "arn:",
    #                 {
    #                   "Ref": "AWS::Partition"
    #                 },
    #                 ":ssm:",
    #                 {
    #                   "Ref": "AWS::Region"
    #                 },
    #                 ":",
    #                 {
    #                   "Ref": "AWS::AccountId"
    #                 },
    #                 ":parameter",
    #                 {
    #                   "Ref": "QMAccounts3D743F6B"
    #                 }
    #               ]
    #             ]
    #           }
    #         },
    #         {
    #           "Action": "support:DescribeTrustedAdvisorChecks",
    #           "Effect": "Allow",
    #           "Resource": "*"
    #         }
    #       ],
    #       "Version": "2012-10-17"
    #     },
    #     "PolicyName": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
    #     "Roles": [
    #       {
    #         "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
    #       }
    #     ]
    #   }
    # },

  #   "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21": {
  #     "Type": "AWS::Lambda::Function",
  #     "Properties": {
  #       "Code": {
  #         "S3Bucket": {
  #           "Fn::Sub": "solutions-${AWS::Region}"
  #         },
  #         "S3Key": "quota-monitor-for-aws/v6.2.6/asset9ff2d7f8cf335efe52c3371f4bd624b6cdda5e5e47166f34aae107fd4a4efd52.zip"
  #       },
  #       "DeadLetterConfig": {
  #         "TargetArn": {
  #           "Fn::GetAtt": [
  #             "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
  #             "Arn"
  #           ]
  #         }
  #       },
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-Lambda",
  #       "Environment": {
  #         "Variables": {
  #           "EVENT_BUS_NAME": {
  #             "Ref": "QMBusFF5C6C0C"
  #           },
  #           "EVENT_BUS_ARN": {
  #             "Fn::GetAtt": [
  #               "QMBusFF5C6C0C",
  #               "Arn"
  #             ]
  #           },
  #           "QM_ACCOUNT_PARAMETER": {
  #             "Ref": "QMAccounts3D743F6B"
  #           },
  #           "DEPLOYMENT_MODEL": "Accounts",
  #           "LOG_LEVEL": "info",
  #           "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.2.6",
  #           "VERSION": "v6.2.6",
  #           "SOLUTION_ID": "SO0005"
  #         }
  #       },
  #       "Handler": "index.handler",
  #       "KmsKeyArn": {
  #         "Fn::GetAtt": [
  #           "KMSHubQMEncryptionKeyA80F8C05",
  #           "Arn"
  #         ]
  #       },
  #       "Layers": [
  #         {
  #           "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
  #         }
  #       ],
  #       "MemorySize": 512,
  #       "Role": {
  #         "Fn::GetAtt": [
  #           "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72",
  #           "Arn"
  #         ]
  #       },
  #       "Runtime": "nodejs18.x",
  #       "Timeout": 60
  #     },
  #     "DependsOn": [
  #       "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
  #       "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
  #     ],
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/Resource",
  #       "aws:asset:path": "asset.9ff2d7f8cf335efe52c3371f4bd624b6cdda5e5e47166f34aae107fd4a4efd52.zip",
  #       "aws:asset:is-bundled": false,
  #       "aws:asset:property": "Code",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

  #   "QMDeploymentManagerQMDeploymentManagerLambdaEventInvokeConfig4C3821AB": {
  #     "Type": "AWS::Lambda::EventInvokeConfig",
  #     "Properties": {
  #       "FunctionName": {
  #         "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21"
  #       },
  #       "MaximumEventAgeInSeconds": 14400,
  #       "Qualifier": "$LATEST"
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/EventInvokeConfig/Resource",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

  #   "QMHelperQMHelperFunctionServiceRole0506622D": {
  #     "Type": "AWS::IAM::Role",
  #     "Properties": {
  #       "AssumeRolePolicyDocument": {
  #         "Statement": [
  #           {
  #             "Action": "sts:AssumeRole",
  #             "Effect": "Allow",
  #             "Principal": {
  #               "Service": "lambda.amazonaws.com"
  #             }
  #           }
  #         ],
  #         "Version": "2012-10-17"
  #       },
  #       "ManagedPolicyArns": [
  #         {
  #           "Fn::Join": [
  #             "",
  #             [
  #               "arn:",
  #               {
  #                 "Ref": "AWS::Partition"
  #               },
  #               ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  #             ]
  #           ]
  #         }
  #       ]
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Function/ServiceRole/Resource",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
  #             "id": "AwsSolutions-IAM4"
  #           },
  #           {
  #             "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
  #             "id": "AwsSolutions-IAM5"
  #           },
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

  #   "QMHelperQMHelperFunction91954E97": {
  #     "Type": "AWS::Lambda::Function",
  #     "Properties": {
  #       "Code": {
  #         "S3Bucket": {
  #           "Fn::Sub": "solutions-${AWS::Region}"
  #         },
  #         "S3Key": "quota-monitor-for-aws/v6.2.6/asset3e295e81ff03dbd69187be26b11643e4df77b2d70e0de0362aa721120da4218c.zip"
  #       },
  #       "Description": "SO0005 quota-monitor-for-aws - QM-Helper-Function",
  #       "Environment": {
  #         "Variables": {
  #           "METRICS_ENDPOINT": {
  #             "Fn::FindInMap": [
  #               "QuotaMonitorMap",
  #               "Metrics",
  #               "MetricsEndpoint"
  #             ]
  #           },
  #           "SEND_METRIC": {
  #             "Fn::FindInMap": [
  #               "QuotaMonitorMap",
  #               "Metrics",
  #               "SendAnonymizedData"
  #             ]
  #           },
  #           "QM_STACK_ID": "quota-monitor-hub-no-ou",
  #           "LOG_LEVEL": "info",
  #           "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.2.6",
  #           "VERSION": "v6.2.6",
  #           "SOLUTION_ID": "SO0005"
  #         }
  #       },
  #       "Handler": "index.handler",
  #       "Layers": [
  #         {
  #           "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
  #         }
  #       ],
  #       "MemorySize": 128,
  #       "Role": {
  #         "Fn::GetAtt": [
  #           "QMHelperQMHelperFunctionServiceRole0506622D",
  #           "Arn"
  #         ]
  #       },
  #       "Runtime": "nodejs18.x",
  #       "Timeout": 5
  #     },
  #     "DependsOn": [
  #       "QMHelperQMHelperFunctionServiceRole0506622D"
  #     ],
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Function/Resource",
  #       "aws:asset:path": "asset.3e295e81ff03dbd69187be26b11643e4df77b2d70e0de0362aa721120da4218c.zip",
  #       "aws:asset:is-bundled": false,
  #       "aws:asset:property": "Code",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

  #   "QMHelperQMHelperFunctionEventInvokeConfig580F9F5F": {
  #     "Type": "AWS::Lambda::EventInvokeConfig",
  #     "Properties": {
  #       "FunctionName": {
  #         "Ref": "QMHelperQMHelperFunction91954E97"
  #       },
  #       "MaximumEventAgeInSeconds": 14400,
  #       "Qualifier": "$LATEST"
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Function/EventInvokeConfig/Resource",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

    "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Provider/framework-onEvent/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "IAM policy is appropriated scoped, ARN is provided in policy resource, false warning",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "Lambda function created by Provider L2 construct uses nodejs 14, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },

  #   "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1": {
  #     "Type": "AWS::IAM::Policy",
  #     "Properties": {
  #       "PolicyDocument": {
  #         "Statement": [
  #           {
  #             "Action": "lambda:InvokeFunction",
  #             "Effect": "Allow",
  #             "Resource": [
  #               {
  #                 "Fn::GetAtt": [
  #                   "QMHelperQMHelperFunction91954E97",
  #                   "Arn"
  #                 ]
  #               },
  #               {
  #                 "Fn::Join": [
  #                   "",
  #                   [
  #                     {
  #                       "Fn::GetAtt": [
  #                         "QMHelperQMHelperFunction91954E97",
  #                         "Arn"
  #                       ]
  #                     },
  #                     ":*"
  #                   ]
  #                 ]
  #               }
  #             ]
  #           }
  #         ],
  #         "Version": "2012-10-17"
  #       },
  #       "PolicyName": "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
  #       "Roles": [
  #         {
  #           "Ref": "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
  #         }
  #       ]
  #     }
  #   },

  #   "QMHelperQMHelperProviderframeworkonEventB1DF6D3F": {
  #     "Type": "AWS::Lambda::Function",
  #     "Properties": {
  #       "Code": {
  #         "S3Bucket": {
  #           "Fn::Sub": "solutions-${AWS::Region}"
  #         },
  #         "S3Key": "quota-monitor-for-aws/v6.2.6/asset7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
  #       },
  #       "Description": "AWS CDK resource provider framework - onEvent (quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Provider)",
  #       "Environment": {
  #         "Variables": {
  #           "USER_ON_EVENT_FUNCTION_ARN": {
  #             "Fn::GetAtt": [
  #               "QMHelperQMHelperFunction91954E97",
  #               "Arn"
  #             ]
  #           }
  #         }
  #       },
  #       "Handler": "framework.onEvent",
  #       "Role": {
  #         "Fn::GetAtt": [
  #           "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB",
  #           "Arn"
  #         ]
  #       },
  #       "Runtime": "nodejs18.x",
  #       "Timeout": 900
  #     },
  #     "DependsOn": [
  #       "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
  #       "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
  #     ],
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Provider/framework-onEvent/Resource",
  #       "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
  #       "aws:asset:is-bundled": false,
  #       "aws:asset:property": "Code",
  #       "cdk_nag": {
  #         "rules_to_suppress": [
  #           {
  #             "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
  #             "id": "AwsSolutions-IAM4"
  #           },
  #           {
  #             "reason": "IAM policy is appropriated scoped, ARN is provided in policy resource, false warning",
  #             "id": "AwsSolutions-IAM5"
  #           },
  #           {
  #             "reason": "Lambda function created by Provider L2 construct uses nodejs 14, risk is tolerable",
  #             "id": "AwsSolutions-L1"
  #           }
  #         ]
  #       }
  #     }
  #   },

  #   "QMHelperCreateUUIDE0D423E6": {
  #     "Type": "Custom::CreateUUID",
  #     "Properties": {
  #       "ServiceToken": {
  #         "Fn::GetAtt": [
  #           "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
  #           "Arn"
  #         ]
  #       }
  #     },
  #     "UpdateReplacePolicy": "Delete",
  #     "DeletionPolicy": "Delete",
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/CreateUUID/Default"
  #     }
  #   },

  #   "QMHelperLaunchData6F23B2C3": {
  #     "Type": "Custom::LaunchData",
  #     "Properties": {
  #       "ServiceToken": {
  #         "Fn::GetAtt": [
  #           "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
  #           "Arn"
  #         ]
  #       },
  #       "SOLUTION_UUID": {
  #         "Fn::GetAtt": [
  #           "QMHelperCreateUUIDE0D423E6",
  #           "UUID"
  #         ]
  #       }
  #     },
  #     "UpdateReplacePolicy": "Delete",
  #     "DeletionPolicy": "Delete",
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Helper/LaunchData/Default"
  #     }
  #   },

  #   "HubNoOUAppRegistryApplication11687F81": {
  #     "Type": "AWS::ServiceCatalogAppRegistry::Application",
  #     "Properties": {
  #       "Description": "Service Catalog application to track and manage all your resources for the solution quota-monitor-for-aws",
  #       "Name": {
  #         "Fn::Join": [
  #           "-",
  #           [
  #             "QM_Hub",
  #             {
  #               "Ref": "AWS::Region"
  #             },
  #             {
  #               "Ref": "AWS::AccountId"
  #             }
  #           ]
  #         ]
  #       },
  #       "Tags": {
  #         "ApplicationType": "AWS-Solutions",
  #         "SolutionID": "SO0005-NoOU",
  #         "SolutionName": "quota-monitor-for-aws",
  #         "SolutionVersion": "v6.2.6"
  #       }
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/HubNoOUAppRegistryApplication/AppRegistryApplication/Resource"
  #     }
  #   },

  #   "HubNoOUAppRegistryApplicationApplicationAttributeGroup12D391FE": {
  #     "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
  #     "Properties": {
  #       "Attributes": {
  #         "solutionID": "SO0005-NoOU",
  #         "solutionName": "quota-monitor-for-aws",
  #         "version": "v6.2.6",
  #         "applicationType": "AWS-Solutions"
  #       },
  #       "Description": "Attribute group for application information",
  #       "Name": {
  #         "Fn::Join": [
  #           "-",
  #           [
  #             "QM_Hub",
  #             {
  #               "Ref": "AWS::Region"
  #             },
  #             {
  #               "Ref": "AWS::AccountId"
  #             }
  #           ]
  #         ]
  #       },
  #       "Tags": {
  #         "ApplicationType": "AWS-Solutions",
  #         "SolutionID": "SO0005-NoOU",
  #         "SolutionName": "quota-monitor-for-aws",
  #         "SolutionVersion": "v6.2.6"
  #       }
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/HubNoOUAppRegistryApplication/AppRegistryApplication/ApplicationAttributeGroup/Resource"
  #     }
  #   },

  #   "HubNoOUAppRegistryApplicationAttributeGroupAssociation876a8964c18aB3CF4B8A": {
  #     "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
  #     "Properties": {
  #       "Application": {
  #         "Fn::GetAtt": [
  #           "HubNoOUAppRegistryApplication11687F81",
  #           "Id"
  #         ]
  #       },
  #       "AttributeGroup": {
  #         "Fn::GetAtt": [
  #           "HubNoOUAppRegistryApplicationApplicationAttributeGroup12D391FE",
  #           "Id"
  #         ]
  #       }
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/HubNoOUAppRegistryApplication/AppRegistryApplication/AttributeGroupAssociation876a8964c18a"
  #     }
  #   },
  
  #   "AppRegistryAssociation": {
  #     "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
  #     "Properties": {
  #       "Application": {
  #         "Fn::GetAtt": [
  #           "HubNoOUAppRegistryApplication11687F81",
  #           "Id"
  #         ]
  #       },
  #       "Resource": {
  #         "Ref": "AWS::StackId"
  #       },
  #       "ResourceType": "CFN_STACK"
  #     },
  #     "Metadata": {
  #       "aws:cdk:path": "quota-monitor-hub-no-ou/AppRegistryAssociation"
  #     }
  #   },
    # "CDKMetadata": {
    #   "Type": "AWS::CDK::Metadata",
    #   "Properties": {
    #     "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSwW7bMAz9ltwVNcmA9bqkWIthHZqlxa4BLbOualvSRMmDYfjfR9mO627oxeR7fiL5KO3kdnstu80K/tBa5eW60pnsHgOoUtw8myN4qDGgT+AHOKdNkdIba3IdtDWCz507bNAEkt3XFA+RkmTOT7HCRKTYi7Jm3XdsE5PCvtIw6IekF0R16u+50bvmb2D8ea8pzFwvKqizHGR3Dy36X+gpzcbH/sVH9LWmAd1Go8JEz/kw9TfT2BLZ47MuZitLksf8dAYiZNP7FBjLQ1QlhgMQCvrNJn9GjIPxMRm+R1tp1c7kCHuhgU2f7LSnFN+EFw0ZrvlknVaJHZPHmJHy2l1sLHEv8tZAbXO+zyfIxtpDwrXQN1qhggCVLfhaPRa8T9/KLt2Ec9wSLkX3gReexYB33kb3P8MLsErP8hOSjV7hgu57MWyJn1WRHtBFIlSkYOuznzDJo7eNztOND39m4aJuyh9icDH0YrOGyr2A3Ky+TO/3KsUP7U3ybunwvRke1dgc5StdNdvPcreRu9Urab320QRdozyN8S/UUHtPOAMAAA=="
    #   },
    #   "Metadata": {
    #     "aws:cdk:path": "quota-monitor-hub-no-ou/CDKMetadata/Default"
    #   },
    #   "Condition": "CDKMetadataAvailable"
    # }
  },
  "Outputs": {
    # "SlackHookKey": {
    #   "Description": "SSM parameter for Slack Web Hook, change the value for your slack workspace",
    #   "Value": {
    #     "Fn::FindInMap": [
    #       "QuotaMonitorMap",
    #       "SSMParameters",
    #       "SlackHook"
    #     ]
    #   },
    #   "Condition": "SlackTrueCondition"
    # },
    # "UUID": {
    #   "Description": "UUID for the deployment",
    #   "Value": {
    #     "Fn::GetAtt": [
    #       "QMHelperCreateUUIDE0D423E6",
    #       "UUID"
    #     ]
    #   }
    # },
    "EventBus": {
      "Description": "Event Bus Arn in hub",
      "Value": {
        "Fn::GetAtt": [
          "QMBusFF5C6C0C",
          "Arn"
        ]
      }
    },
    # "SNSTopic": {
    #   "Description": "The SNS Topic where notifications are published to",
    #   "Value": {
    #     "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
    #   }
    # }
  }
}